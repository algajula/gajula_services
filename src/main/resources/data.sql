CREATE SCHEMA IF NOT EXISTS GAJULA_SERVICES;
SET SCHEMA GAJULA_SERVICES;

drop table if exists gajula_services.AUTHOR cascade;
drop table if exists gajula_services.BOOK cascade;
drop sequence if exists gajula_services.authorid_seq;
drop sequence if exists gajula_services.bookid_seq;
create sequence gajula_services.authorid_seq start with 1 increment by 1;
create sequence gajula_services.bookid_seq start with 1 increment by 1;
commit;

create table gajula_services.AUTHOR
(AUTHOR_ID numeric(38,0) not null,
DATE_OF_BIRTH TIMESTAMP,
FIRST_NAME varchar(255),
LAST_NAME varchar(255),
NATIONALITY varchar(255),
primary key (AUTHOR_ID));
commit;

create table gajula_services.BOOK
(BOOK_ID numeric(38,0) not null,
PRICE float(53),
PUBLICATION_DATE TIMESTAMP,
AUTHOR_ID varchar(255),
GENRE varchar(255),
TITLE varchar(255),
primary key (BOOK_ID));
commit;

alter table if exists gajula_services.BOOK
add constraint fk_author_id foreign key (author_id) references GAJULA_SERVICES.AUTHOR;
commit;


INSERT INTO GAJULA_SERVICES.AUTHOR (AUTHOR_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH,NATIONALITY)
VALUES(1101, 'Jane', 'Austen', '1970-01-01', 'USA');

INSERT INTO GAJULA_SERVICES.AUTHOR (AUTHOR_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH,NATIONALITY)
VALUES(1102, 'Frank', 'Herbert', '1971-01-01', 'USA');

INSERT INTO GAJULA_SERVICES.AUTHOR (AUTHOR_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH,NATIONALITY)
VALUES(1103, 'J.R.R.', 'Tolkien', '1972-01-01', 'USA');

INSERT INTO GAJULA_SERVICES.AUTHOR (AUTHOR_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH,NATIONALITY)
VALUES(1104, 'Gillian', 'Flynn', '1973-01-01', 'USA');

INSERT INTO GAJULA_SERVICES.AUTHOR (AUTHOR_ID, FIRST_NAME, LAST_NAME, DATE_OF_BIRTH,NATIONALITY)
VALUES(1105, 'Howard', 'Zinn', '1974-01-01', 'USA');

INSERT INTO GAJULA_SERVICES.BOOK (BOOK_ID, TITLE, GENRE,PUBLICATION_DATE,PRICE, AUTHOR_ID)
VALUES(1101, 'Pride and Prejudice', 'Classics', '2000-01-15', 135.00, 1101 );

INSERT INTO GAJULA_SERVICES.BOOK (BOOK_ID, TITLE, GENRE,PUBLICATION_DATE,PRICE, AUTHOR_ID)
VALUES(1102, 'Dune', 'Science Fiction', '2000-01-15', 210.00, 1102 );

INSERT INTO GAJULA_SERVICES.BOOK (BOOK_ID, TITLE, GENRE,PUBLICATION_DATE,PRICE, AUTHOR_ID)
VALUES(1103, 'The Lord of the Rings', 'Fantasy', '2000-01-15', 310.00, 1103 );

INSERT INTO GAJULA_SERVICES.BOOK (BOOK_ID, TITLE, GENRE,PUBLICATION_DATE,PRICE, AUTHOR_ID)
VALUES(1104, 'Gone Girl', 'Mistery/Thriller', '2000-01-15', 410.00, 1104 );

INSERT INTO GAJULA_SERVICES.BOOK (BOOK_ID, TITLE, GENRE,PUBLICATION_DATE,PRICE, AUTHOR_ID)
VALUES(1105, 'A Peoples History of the United States', 'History', '2000-01-15', 410.00, 1105 );
commit;

drop table if exists gajula_services.CUSTOMER cascade;
drop table if exists gajula_services.VEHICLE cascade;
drop sequence if exists gajula_services.custuid_seq;
drop sequence if exists gajula_services.vehuid_seq;
CREATE SEQUENCE GAJULA_SERVICES.custuid_seq start with 1 increment by 1;
CREATE SEQUENCE GAJULA_SERVICES.vehuid_seq start with 1 increment by 1;
commit;

CREATE TABLE IF NOT EXISTS GAJULA_SERVICES.customer
(
    cust_uid bigint PRIMARY KEY,
    custname VARCHAR(100),
    custnumber bigint,
    email_address VARCHAR(100),
    phone bigint,
    createddate timestamp without time zone,
    modifieddate timestamp without time zone
);
CREATE TABLE IF NOT EXISTS GAJULA_SERVICES.vehicle
(
    vehicle_uid bigint PRIMARY KEY,
    vin VARCHAR(100),
    vrn VARCHAR(100),
    cust_uid bigint,
    CONSTRAINT fk_customer FOREIGN KEY(cust_uid)
	REFERENCES GAJULA_SERVICES.customer(cust_uid)
);
COMMIT;

INSERT INTO GAJULA_SERVICES.customer(cust_uid,createddate, custname, custnumber, email_address, modifieddate, phone)
VALUES (11,CURRENT_DATE, 'test1', '1101','test1@GMAIL.COM', CURRENT_DATE, '1234567891');
INSERT INTO GAJULA_SERVICES.vehicle(vehicle_uid, vin, vrn, cust_uid)
VALUES (11, 'vin1101', 'vrn1001', 11);
COMMIT;



drop table if exists gajula_services.CITY cascade;
drop table if exists gajula_services.COUNTRY cascade;
drop table if exists gajula_services.STATE cascade;

create table gajula_services.COUNTRY
 (COUNTRY_CODE numeric(38,0) generated by default as identity,
 COUNTRY_NAME varchar(255),
 REGION varchar(255),
 primary key (COUNTRY_CODE));

create table gajula_services.STATE
 (STATE_CODE numeric(38,0) generated by default as identity,
 STATE_NAME varchar(255),
 COUNTRY_CODE numeric(38,0),
 primary key (STATE_CODE));

create table gajula_services.CITY
 (CITY_CODE numeric(38,0) generated by default as identity,
 CITY_NAME varchar(255),
 STATE_CODE numeric(38,0),
 primary key (CITY_CODE));

alter table if exists gajula_services.STATE add constraint FKryctm4g81kmk44cdi2gfenisv foreign key (COUNTRY_CODE) references gajula_services.COUNTRY;
alter table if exists gajula_services.CITY add constraint FK5kcbyto58flr6dev6y7cltoso foreign key (STATE_CODE) references gajula_services.STATE;
COMMIT;

INSERT INTO GAJULA_SERVICES.COUNTRY (COUNTRY_CODE, COUNTRY_NAME, REGION) VALUES(1111, 'INDIA', 'APAC');
INSERT INTO GAJULA_SERVICES.COUNTRY (COUNTRY_CODE, COUNTRY_NAME, REGION) VALUES(1112, 'UK', 'EURO');
INSERT INTO GAJULA_SERVICES.COUNTRY (COUNTRY_CODE, COUNTRY_NAME, REGION) VALUES(1113, 'America', 'NA');
COMMIT;

INSERT INTO GAJULA_SERVICES.STATE (STATE_CODE, STATE_NAME, COUNTRY_CODE) VALUES(2221, 'Andhra Pradesh', 1111);
INSERT INTO GAJULA_SERVICES.STATE (STATE_CODE, STATE_NAME, COUNTRY_CODE) VALUES(2222, 'Telangana', 1111);
INSERT INTO GAJULA_SERVICES.STATE (STATE_CODE, STATE_NAME, COUNTRY_CODE) VALUES(2223, 'Tamilanadu', 1111);
INSERT INTO GAJULA_SERVICES.STATE (STATE_CODE, STATE_NAME, COUNTRY_CODE) VALUES(2224, 'Karnataka', 1111);
COMMIT;

INSERT INTO GAJULA_SERVICES.CITY (CITY_CODE, CITY_NAME, STATE_CODE) VALUES(3331, 'Guntur', 2221);
INSERT INTO GAJULA_SERVICES.CITY (CITY_CODE, CITY_NAME, STATE_CODE) VALUES(3332, 'Vijayawada', 2221);
INSERT INTO GAJULA_SERVICES.CITY (CITY_CODE, CITY_NAME, STATE_CODE) VALUES(3333, 'Kurnool', 2221);
COMMIT;

INSERT INTO GAJULA_SERVICES.CITY (CITY_CODE, CITY_NAME, STATE_CODE) VALUES(3334, 'Hyderabad', 2222);
INSERT INTO GAJULA_SERVICES.CITY (CITY_CODE, CITY_NAME, STATE_CODE) VALUES(3335, 'Warangal', 2222);
INSERT INTO GAJULA_SERVICES.CITY (CITY_CODE, CITY_NAME, STATE_CODE) VALUES(3336, 'Khammam', 2222);
COMMIT;

drop table if exists gajula_services.ADDRESS_INFO cascade;
drop table if exists gajula_services.USER_INFO cascade;
drop table if exists gajula_services.USERPWD_INFO cascade;
COMMIT;

drop sequence if exists gajula_services.addruid_seq_id;
drop sequence if exists gajula_services.userid_seq;
drop sequence if exists gajula_services.userpwdid_seq_id;
COMMIT;

create sequence gajula_services.addruid_seq_id start with 1 increment by 1;
create sequence gajula_services.userid_seq start with 1 increment by 1;
create sequence gajula_services.userpwdid_seq_id start with 1 increment by 1;
COMMIT;

create table gajula_services.ADDRESS_INFO
 (ADDR_UID numeric(38,0) not null, USERID numeric(38,0), CREATED_DATE TIMESTAMP, MODIFIED_DATE TIMESTAMP,
 ADDRESS_TYPE varchar(255), AREA varchar(255), CITY varchar(255), COUNTRY varchar(255), FLAT varchar(255),
 STATE varchar(255), STREET varchar(255), TOWN varchar(255), ZIPCODE varchar(255), landmark varchar(255),
primary key (ADDR_UID));

create table gajula_services.USER_INFO
 (MARITAL_STATUS boolean, USERID numeric(38,0), USER_UID numeric(38,0) not null, CREATED_DATE TIMESTAMP,
 DATE_OF_BIRTH TIMESTAMP, MODIFIED_DATE TIMESTAMP, ALTERNATE_PHONE varchar(10),
 PHONE varchar(10), EMAIL_ADDRESS varchar(255), FIRST_NAME varchar(255),
 FULL_NAME varchar(255), LAST_NAME varchar(255), OCCUPATION varchar(255),
GENDER enum ('FEMALE','MALE'), primary key (USER_UID));

create table gajula_services.USERPWD_INFO
 (USERID numeric(38,0), USERPWD_UID numeric(38,0) not null, CREATED_DATE TIMESTAMP,
 MODIFIED_DATE TIMESTAMP, FIRST_PWD varchar(255), SECOND_PWD varchar(255),
 THIRD_PWD varchar(255), primary key (USERPWD_UID));
COMMIT;
